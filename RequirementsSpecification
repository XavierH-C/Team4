Title page

Table of contents
1. Introduction
1.1 Purpose
1.2 Scope
1.3 Definitions, acronyms, and abbreviations
1.4 References
1.5 Overview
2. Overall description
2.1 Product perspective
2.2 Product functions
2.3 User characteristics
2.4 Constraints
2.5 Assumptions and dependencies
3. Specific requirements (See the attached UML use case specification)

1. Use Case Name: Make Course Registration
2. Actor: Student
3. Precondition
	The actor has successfully logged in the system
4. Actor-System interaction
	Main case
	Case 1: Registration is successful
		Actor: enter course ID
		System: check if course exists
		System: check if the course is cancelled
		System: check if the actor is eligible to register this course, including prerequisite satisfaction, no duplicate registration, and other policy
		System: check if the course is full
		System: register the actor to the course
		System: show confirmation to the actor for successful registration
	Postcondition: The actor is added to the course registration list

	Alterative cases:
	Case 2: The course to be registered does not exist
		Actor: enter course ID
		System: check if course exists
		System: show error message
	Postcondition: no state change to the course
 
	Case 3: The actor is not eligible to register the course
		Actor: enter course ID
		System: check if course exists
		System: check if the course is cancelled
		System: check if the actor is eligible to register this course, including prerequisite satisfaction, no duplicate registration, and other policy
		System: show error message
	Postcondition: no state change to the course

	Case 4: The course is full and the actor is added to the waiting list
		Actor: enter course ID
		System: check if course exists
		System: check if the course is cancelled
		System: check if the actor is eligible to register this course, including prerequisite satisfaction, no duplicate registration, and other policy
		System: check if the course is full
		System: ask the actor if adding to the course waiting list
		Actor: enter “yes”
		System: add the actor to the course waiting list
		System: show confirmation to the actor for adding to the waiting list
	Postcondition: the actor is added to the course waiting list

	Case 5: The course is full and the actor is not added to the waiting list
		Actor: enter course ID
		System: check if course exists
		System: check if the course is cancelled
		System: check if the actor is eligible to register this course, including prerequisite satisfaction, no duplicate registration, and other policy
		System: check if the course is full
		System: ask the actor if adding to the course waiting list
		Actor: enter “no”
		System: show message to the actor for not adding to the waiting list
	Postcondition: no change to the course’s state

	Case 6: The course is cancelled
		Actor: enter course ID
		System: check if course exists
		System: check if the course is cancelled
		System: show the course is cancelled
	Postcondition: no change to the course’s state
